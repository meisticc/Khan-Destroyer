const ver = "V3.0.5";

// Configura√ß√µes de atraso para as funcionalidades
const featureConfigs = {
    initialDelay: 2000, // Reduced initial delay for quicker action
    subsequentDelays: [200, 1000, 300, 1000] // Reduced delays
};

// Configura√ß√µes das funcionalidades
window.features = {
    autoAnswer: true,  // Ensure this is set to true to auto-answer
    questionSpoof: true
};

// Fun√ß√£o para criar um delay
const delay = ms => new Promise(resolve => setTimeout(resolve, ms));

// Fun√ß√£o para reproduzir √°udio
const playAudio = url => {
    const audio = new Audio(url);
    audio.play();
};

// Fun√ß√£o para exibir um toast (notifica√ß√£o)
function sendToast(text, duration = 5000, gravity = 'bottom', imageUrl = null, fontSize = '16px', fontFamily = 'Arial, sans-serif', color = '#ffffff') {
    const toast = Toastify({
        text: text,
        duration: duration,
        gravity: gravity,
        position: "center",
        stopOnFocus: true,
        style: {
            background: "#000000",
            fontSize: fontSize,
            fontFamily: fontFamily,
            color: color,
            padding: '10px 20px',
            borderRadius: '5px',
            display: 'flex',
            alignItems: 'center'
        }
    });

    if (imageUrl) {
        const img = document.createElement('img');
        img.src = imageUrl;
        img.style.width = '20px';
        img.style.height = '20px';
        img.style.marginRight = '10px';
        toast.toastElement.prepend(img);
    }

    toast.showToast();
}

// Fun√ß√£o para encontrar e clicar em um elemento por classe
function findAndClickByClass(className) {
    const element = document.getElementsByClassName(className)[0];
    if (element) {
        element.click();
        if (element.textContent === 'Mostrar resumo') {
            sendToast("üéâ Exerc√≠cio conclu√≠do!", 3000);
            playAudio('https://r2.e-z.host/4d0a0bea-60f8-44d6-9e74-3032a64a9f32/4x5g14gj.wav');
        }
    }
    return !!element;
}

// Fun√ß√£o para detectar o bot√£o "Pr√≥xima Atividade" (se dispon√≠vel) e clicar nele
function goToNextAssignment() {
    const nextAssignmentButton = document.querySelector('button[data-next-assignment]'); // Adjust this selector based on the website's structure
    if (nextAssignmentButton) {
        nextAssignmentButton.click();
        sendToast("üöÄ Indo para a pr√≥xima atividade!", 3000);
    } else {
        console.log("N√£o encontrado 'Pr√≥xima Atividade'.");
    }
}

// Fun√ß√£o para responder automaticamente √†s quest√µes
function autoAnswer() {
    (async () => {
        const baseClasses = ["_s6zfc1u", "_ssxvf9l", "_4i5p5ae", "_1r8cd7xe", "_1yok8f4"];

        while (true) {
            if (window.features.autoAnswer && window.features.questionSpoof) {
                await delay(featureConfigs.initialDelay);

                for (let i = 0; i < baseClasses.length; i++) {
                    const clicked = findAndClickByClass(baseClasses[i]);
                    if (clicked && i < baseClasses.length - 1) {
                        const nextDelay = featureConfigs.subsequentDelays[i % featureConfigs.subsequentDelays.length];
                        await delay(nextDelay);
                    }
                }

                // After completing the current task, move to the next assignment
                goToNextAssignment();
                await delay(3000); // Pause before moving to the next task
            } else {
                await delay(1000);
            }
        }
    })();
}

// Fun√ß√£o para exibir a tela de inicializa√ß√£o
async function showSplashScreen() {
    const splashScreen = document.createElement('div');
    splashScreen.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: #000;
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
        opacity: 0;
        transition: opacity 0.5s ease;
        user-select: none;
        color: white;
        font-family: MuseoSans, sans-serif;
        font-size: 30px;
        text-align: center;
    `;
    splashScreen.innerHTML = '<span style="color:white;">KHAN </span><span style="color:#00ff00;">DESTROYER</span>';
    document.body.appendChild(splashScreen);
    setTimeout(() => splashScreen.style.opacity = '1', 10);

    await delay(2000);
    splashScreen.style.opacity = '0';
    await delay(1000);
    splashScreen.remove();
}

// Fun√ß√£o para exibir o popup de doa√ß√£o
function showDonationPopup() {
    const popup = document.createElement('div');
    popup.style.cssText = `
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #1e1e1e;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px #00ff00;
        z-index: 10000;
        text-align: center;
        color: white;
        font-family: Arial, sans-serif;
    `;
    popup.innerHTML = `
        <div style="position: absolute; top: 10px; right: 10px; cursor: pointer; color: red; font-size: 20px;" onclick="this.parentElement.remove(); showDiscordPopup();">√ó</div>
        <img src="https://i.imgur.com/t4mfuJU.png" alt="Logo" style="width: 100px; height: 100px; margin-bottom: 10px;">
        <h2 style="color: #00ff00; text-shadow: 0 0 5px #00ff00;">Contribua com o projeto</h2>
        <p style="font-size: 14px;">Sua ajuda √© necess√°ria para manter e atualizar o projeto. Qualquer doa√ß√£o √© bem-vinda!</p>
        <button onclick="window.open('https://pixgg.com/im_snow', '_blank');" style="background-color: #00ff00; color: black; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer; font-size: 16px;">Doar</button>
    `;
    document.body.appendChild(popup);
}

// Fun√ß√£o para exibir o popup do Discord
function showDiscordPopup() {
    const popup = document.createElement('div');
    popup.style.cssText = `
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #1e1e1e;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px #00ff00;
        z-index: 10000;
        text-align: center;
        color: white;
        font-family: Arial, sans-serif;
    `;
    popup.innerHTML = `
        <div style="position: absolute; top: 10px; right: 10px; cursor: pointer; color: red; font-size: 20px;" onclick="this.parentElement.remove();">√ó</div>
        <img src="https://i.imgur.com/t4mfuJU.png" alt="Logo" style="width: 100px; height: 100px; margin-bottom: 10px;">
        <h2 style="color: #00ff00; text-shadow: 0 0 5px #00ff00;">Entre no nosso servidor</h2>
        <p style="font-size: 14px;">Junte-se √† nossa comunidade no Discord para mais atualiza√ß√µes e suporte!</p>
        <button onclick="window.open('https://discord.gg/gamesdest', '_blank');" style="background-color: #00ff00; color: black; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer; font-size: 16px;">Entrar no servidor</button>
    `;
    document.body.appendChild(popup);
}

// Verifica se o script est√° sendo executado no site correto (English version)
if (/^https?:\/\/(pt\.)?khanacademy\.org/.test(window.location.href)) {
    alert("‚ùå You are on the wrong site. Redirecting to the English site.");
    window.location.href = "https://www.khanacademy.org/"; // Redirect to English version
}

// Carrega o Dark Reader e ativa o modo escuro
loadScript('https://cdn.jsdelivr.net/npm/darkreader@4.9.92/darkreader.min.js').then(async () => {
    DarkReader.setFetchMethod(window.fetch);
    DarkReader.enable();

    // Exibe o aviso "HACK ATIVO ENTRE NA ATIVIDADE"
    sendToast("HACK ATIVO ENTRE NA ATIVIDADE", 5000, 'top', null, '20px', 'Arial, sans-serif', '#00ff00');

    // Aguarda 1 segundo antes de exibir o toast do Dark Mode
    await delay(1000);

    // Exibe o toast do Dark Mode com a imagem
    sendToast("üåë Dark Mode ativado!", 2000, 'bottom', 'https://cdn.discordapp.com/attachments/1326756804889280553/1351333793306247220/6c0df6a95ea7f835588f586a11bdbd4e.png?ex=67d9ff2a&is=67d8adaa&hm=1992d77fc05bd65a4417da3e860cead36b2d62395a28f1b6598d43a0ab953cc0&');
});

// Carrega o CSS do Toastify
loadCss('https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css');

// Carrega o Toastify e inicia as funcionalidades
loadScript('https://cdn.jsdelivr.net/npm/toastify-js').then(async () => {
    sendToast("üéÆ Khan Destroyer injetado com sucesso!", 5000, 'bottom');
    window.features.autoAnswer = true;
    spoofQuestion();
    autoAnswer();
    console.clear();

    // Exibe a tela de inicializa√ß√£o
    await showSplashScreen();

    // Exibe o popup de doa√ß√£o
    showDonationPopup();
});
